def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 33 //flutter.compileSdkVersion
    //ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
    }

    lintOptions {
        disable 'InvalidPackage'
        //checkReleaseBuilds false
    }

    signingConfigs {
        release {
            storeFile file('K:\\Programming\\Tools\\Key\\venusAdviser.jks')
            keyAlias 'key'
            keyPassword 'venusAdviser123'
            storePassword 'venusAdviser123'
        }
    }

    defaultConfig {
        applicationId "ir.iris.vosate_zehn.vosate_zehn"
        minSdkVersion   21 // flutter.minSdkVersion, base:16
        targetSdkVersion 33 // flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled false
        dexOptions {
            javaMaxHeapSize "2g"
            keepRuntimeAnnotatedClasses false //false: if do not use reflection and need more space in their main dex
            preDexLibraries = false
            incremental false
            jumboMode = false
            maxProcessCount 2
            threadCount 10
        }

        def documentsAuthorityValue = applicationId + ".documentsProvider"
        manifestPlaceholders.documentsAuthority = documentsAuthorityValue
        manifestPlaceholders.fileAuthority = applicationId + ".fileProvider"
        manifestPlaceholders.shareAuthority = applicationId + ".shareContentProvider"
        buildConfigField "String", "fileAuthority", "\"${documentsAuthorityValue}\""
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    //implementation platform('com.google.firebase:firebase-bom:30.2.0')
    //implementation 'androidx.annotation:annotation:1.4.0'
    //implementation 'androidx.multidex:multidex:2.0.1'
}